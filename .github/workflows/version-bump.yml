name: Version Bump

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
      create_pr:
        description: 'Create pull request'
        required: true
        type: boolean
        default: true

jobs:
  version-bump:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install dependencies
        run: npm ci

      - name: Get current version
        id: current_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump
        run: |
          npm version ${{ github.event.inputs.version_type }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Update CHANGELOG
        run: |
          # Add new version section to CHANGELOG
          NEW_VERSION="${{ steps.bump.outputs.new_version }}"
          DATE=$(date +%Y-%m-%d)
          
          # Create a temporary file with the new section
          echo -e "## [Unreleased]\n\n## [$NEW_VERSION] - $DATE\n" > temp_changelog.md
          
          # Extract content after [Unreleased] and before the next version section
          sed -n '/## \[Unreleased\]/,/## \[/{/## \[Unreleased\]/d; /## \[/d; p;}' CHANGELOG.md >> temp_changelog.md
          
          # Add the rest of the changelog
          sed -n '/## \[.*\] -/,$p' CHANGELOG.md >> temp_changelog.md
          
          # Replace the original file
          mv temp_changelog.md CHANGELOG.md

      - name: Create branch and commit
        if: ${{ github.event.inputs.create_pr == 'true' }}
        run: |
          BRANCH_NAME="version-bump-${{ steps.bump.outputs.new_version }}"
          git checkout -b $BRANCH_NAME
          git add package.json package-lock.json CHANGELOG.md
          git commit -m "chore: bump version to ${{ steps.bump.outputs.new_version }}"
          git push origin $BRANCH_NAME

      - name: Create Pull Request
        if: ${{ github.event.inputs.create_pr == 'true' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pr } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `chore: bump version to ${{ steps.bump.outputs.new_version }}`,
              head: `version-bump-${{ steps.bump.outputs.new_version }}`,
              base: 'main',
              body: `## Version Bump
              
              This PR bumps the version from ${{ steps.current_version.outputs.version }} to ${{ steps.bump.outputs.new_version }}.
              
              ### Type of change
              - ${{ github.event.inputs.version_type }} version bump
              
              ### Checklist
              - [x] Version bumped in package.json
              - [x] CHANGELOG.md updated with new version section
              - [ ] All tests passing
              - [ ] Ready for release
              
              ### Next steps
              1. Review and merge this PR
              2. Create and push the version tag
              3. The release workflow will automatically create a GitHub release and publish to NPM
              
              \`\`\`bash
              git checkout main
              git pull origin main
              git tag v${{ steps.bump.outputs.new_version }}
              git push origin v${{ steps.bump.outputs.new_version }}
              \`\`\``,
              draft: false
            });
            
            console.log(`Pull request created: ${pr.html_url}`);

      - name: Direct commit (no PR)
        if: ${{ github.event.inputs.create_pr == 'false' }}
        run: |
          git add package.json package-lock.json CHANGELOG.md
          git commit -m "chore: bump version to ${{ steps.bump.outputs.new_version }}"
          git push origin main