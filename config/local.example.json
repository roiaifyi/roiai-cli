{
  "// NOTE": "Copy this file to 'local.json' and update with your actual values",
  "// NOTE2": "The 'local.json' file is gitignored and won't be committed",
  
  "app": {
    "// dataDir": "Directory for storing app data files",
    "dataDir": "~/.roiai-cli",
    
    "// machineInfoFilename": "Filename for machine info JSON file",
    "machineInfoFilename": "machine_info.json"
  },
  
  "user": {
    "// infoFilename": "Filename for user info JSON file (stored in app.dataDir)",
    "infoFilename": "user_info.json"
  },
  
  "claudeCode": {
    "// rawDataPath": "Path to your Claude Code raw data directory",
    "// rawDataPath_example1": "/Users/yourusername/claude_raw_data",
    "// rawDataPath_example2": "~/Library/Application Support/Claude/claude_raw_data",
    "// rawDataPath_example3": "C:\\Users\\YourName\\AppData\\Local\\Claude\\claude_raw_data",
    "rawDataPath": "../claude_raw_data",
    
    "// pricingUrl": "URL to fetch pricing data from",
    "pricingUrl": "https://raw.githubusercontent.com/alansparrow/ai-models-pricing/main/claude/pricing-data.json",
    
    "// pricingCacheTimeout": "How long to cache pricing data in milliseconds (3600000 = 1 hour, 0 = no cache)",
    "pricingCacheTimeout": 3600000,
    
    "// cacheDurationDefault": "Cache duration in minutes (5 or 60)",
    "cacheDurationDefault": 5
  },
  
  "api": {
    "// baseUrl": "Base URL for the API server",
    "baseUrl": "https://api.roiai.com",
    "// endpoints": "API endpoint paths",
    "endpoints": {
      "login": "/v1/cli/login",
      "push": "/v1/data/upsync"
    }
  },
  
  "push": {
    "// apiToken": "Bearer token for API authentication (keep this secret!)",
    "apiToken": "your-bearer-token-here",
    
    "// batchSize": "Number of messages to push per batch (default: 1000)",
    "batchSize": 1000,
    
    "// maxRetries": "Maximum number of retry attempts for failed messages (default: 5)",
    "maxRetries": 5,
    
    "// timeout": "Request timeout in milliseconds (default: 30000 = 30 seconds)",
    "timeout": 30000
  },
  
  "database": {
    "// path": "Path to SQLite database file (relative to project root)",
    "path": "./prisma/dev.db"
  },
  
  "logging": {
    "// level": "Logging level: 'debug', 'info', 'warn', or 'error'",
    "level": "info"
  }
}